{
    "title": "Book",
    "author": "Rhio Kim",
    "date": "Sat, 05 May 2012 21:02:13 GMT",
    "categories": [
    ],
    "tags": [
    ],
    "acceptComment": true,
    "acceptTrackback": true,
    "published": "Sat, 05 May 2012 21:02:13 GMT",
    "status": "public",
    "advanced": {
        "layout": "pages"
    }
}

## 하루프레스
### 하루프레스란?
처음 하루프레스는 haroog 는 하루의 영문 발음 표기법(haroo)과 로그(log) 의 혼합어로 블로그를 연상시킬 수 있는 고유명사로 시작했다.
하지만 입에 짝! 달라붇지 않았다. 

그 뒤로도 워드프레스의 느낌을 계승하면서 마크다운과 프레스를 합쳐 '마크프레스' 라는 명칭도 고민하였으나 결국 대부분이 개발자라는 틀을 벗어나지 못하는 느낌이였다.

그래서 고민끝에 하루, 24시간, 나의 일상을 발행하고 싶다는 의미에서 **'하루'프레스** 로 결정하였다.  하루라는 한글어의 발음은 받침이 없고 발음이 부드럽고 일상에서 자주 사용되는 단어이기 때문에 하루프레스를 사용하거나 봤던 사용자들에게는 "하루프레스" 라는 단어가 어색하지 않게 불리게 될 것이라 결론 내렸다.

하루프레스는 개발자들을 위한 하루의 일상을 발행하기 위한 블로그 엔진이다.  
기술적인 특징으로는 웹서버와 데이터베이스 없이도 블로그 서비스가 가능하며 마크다운 포맷을 지원하기 때문에 다양한 기술문서나 마크다운 포맷에 익숙한 개발자들에게는 더 없이 유용한 도구가 될 것이다.

### 누구를 위한 것인가?
* 100% 개발자

### 하루프레스를 만들게 된 계기
처음 시작은 개인적으로 진행중인 큰 프로젝트가 진행중인데 그 프로젝트를 소개할 만한 블로그 형태의 사이트를 개발하다.
떠오른 아이디어가 **마크다운** 으로 작성된 문서를 간편하게 웹으로 퍼블리싱할 수 있는 방법이 필요했다.

물론 현존하는 다양한 블로그 엔진이 많다. 하지만 이미 고도화되고 성숙된 기능들을 많이 가지고 있어 편리하지만 고도화 된 만큼 
사용자에게도 높은 학습 과정을 필요로하고 있었다. 더욱이 내가 원하는 형태로 커스터마이징을 하기 위해서는 서버 시스템도 필요하고
웹 서버를 직접 설치하고 DBMS 도 직접 구축 해야하는 복잡함이 있다.

그러던 중 루비로 작성된 옥토프레스라는 오픈소스 블로그 엔진을 알게 되었고 정적 페이지를 깃허브를 통해 퍼블리싱할 수 있는
자동화 시스템까지 갖추고 있었다.  또한 콘텐츠 포맷도 **마크다운** 으로 되어있었다.

That's it!

하지만 루비에 경험이 없는 상황에서 커스터마이징 하기가 쉽지는 않았다.  그래서 노드로 생각을 돌려서 하루프레스를 

* 루비로 작성된 옥토프레스의 노드 버젼을 만들고 싶었다.
* 웹 애플리케이션 시대에 콘텐츠 메니징 시스템(CMS)의 변화 시도
* 자바스크립트의 새로운 영역에 대한 도전과 가치를 만들고 싶었다.
* 개발자로 살아오면서 가치있는 오픈소스 프로젝트를 형성하고 싶었다.

### 하루프레스의 목표와 얻고자 한 가치
하루프레스 개발을 시작하면서 갖었던 목표와 가치가 있었다. 
그중 가장 중요한 것은 오픈 소스의 가치와 성공적인 소프트웨어를 만드는 것이였다.  

**성공** 이라는 단어에는 굉장히 많은 의미를 함축하고 있지만 그중 가장 중요한 것은 성공적인 소프트웨어 이다. 

* 성공적인 소프트웨어를 만들어 보자.
* 다뤄보지 않았던 신기술을 활용해 보자.
* 모든 것을 자바스크립트로 구현하자.
* 애자일을 적용하자.
* 소프트웨어의 진행상황을 투명하게 하자.
* 비즈니스 모델을 만들어서 적용해 보자.
* 프로덕트 메니저의 역할을 학습해 보자.

### 워드프레스와의 차이점
**단순함** 이 가장 큰 차이점이자 장점이다.  물론 그만큼 고급 옵션들이나 사용자에게 편안한 GUI 방식은 아직은 제공하지 않는다는 말도 된다.

하루프레스는 ' 나 지금 블로깅을 하고 싶어. 근데 웹 서버 구축하기도 싫고 데이터베이스 셋팅하기도 귀찮아. 그냥 내 컴퓨터에 글쓰고 싶을때 쓰면 바로 적용되면 좋을 텐데…' 라는 생각의 해결책이다.  

## 하루프레스 사용 메뉴얼
### 요구사항
* 노드 설치하기
* Git 설치하기

### 깃허브설정
### 소스클론
### 환경설정
### 제너레이팅
### 프리뷰
### 글쓰기
### 배포하기
* Github 에 배포하기
* Heroku 에 배포하기
* Rsync 로 배포하기

### 페이지 생성
### 플러그인 설정
### 포스트 버젼관리
### 포스트 드랍박스 연동
### 테마 만들기

## 하루프레스 개발 히스토리
### 애자일
### 계획
* 마일스톤
* 이슈 및 타스크 관리

### 일정산정
### 설계와 구현
### 버젼관리
### 이슈관리
### 테스트
### 문서화

## 마치며
약 3개월 가량 하루프레스에 미쳐 살았다.  주변의 반응과 쏟아지는 정보를 모두 튕겨내고 한가지 일에 몰두했다.

지난 6년동안 자바스크립트의 수 많은 가능성에 도전을 해왔고 이번 프로젝트도 그 일환중에 하나였다.  2010년부터 자바스크립트의 전성시대라 대중들에게 떠들었을뿐 그 가능성을 하나씩 실현에 옮기고 싶었다.

UI 개발, 아두이노라는 마이크로 컨트롤러 제어, 음성기반의 하드웨어 제어 그리고 서버와 클리언트에 동일한 언어로 개발된 하루프레스가 그중에 하나이다.

### 오픈소스
### 깃허브와 오픈소스 프로젝트
앞에서도 이야기를 했지만 하루프레스 프로젝트를 진행하면서 깃허브의 역할은 굉장히 컸다.  

간략하게 그 느낀바를 정리하면 다음과 같다.

* 깃허브는 프로젝트를 성공적인 결과물로 만들어주기 위한 깔끔하고 심플한 매니저이다.
* 프로젝트의 성공을 위한 필수 도구이다.
* 개발자의 열정을 절제시켜주는 도구이다.
* 개발자에게 휴식과 여유를 만들어 주는 도구이다.
* 개발자에게 작업의 공간을 초월하게 해주는 도구이다.
* 프로덕트를 향한 개발자의 열정을 유지시켜주는 도구이다.
* 소프트웨어 설계에도 영향을 미치는 도구이다.

* 내 아이가 커가는 모습을 스냅샷처럼 기록해주는 훌륭한 도구이다.



### 노드(node.js)와 자바스크립트
### 큐레이션
### 스펙

[1.1]: /post/
[1.2]: /post/
[2.1]: /post/
[2.2]: /post/
[2.3]: /post/
[3.1]: /post/harupeureseu-hwangyeongseoljeong-hagi/
[4.1]: /post/harupeureseu-geul-jagseonghagi/
